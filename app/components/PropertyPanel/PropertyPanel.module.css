/* Property Panel Main Styles */
.propertyPanel {
  position: fixed;
  top: 0;
  right: 0;
  height: 100vh;
  background: var(--background);
  border-left: 1px solid var(--border);
  display: flex;
  flex-direction: column;
  z-index: 1000;
  transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  box-shadow: -4px 0 24px rgba(0, 0, 0, 0.1);
}

.propertyPanel.collapsed {
  transform: translateX(calc(100% - 48px));
}

.propertyPanel.compact {
  --spacing: 8px;
  --font-size-sm: 12px;
  --font-size-base: 13px;
}

.propertyPanel.resizing {
  user-select: none;
  pointer-events: none;
}

.propertyPanel.resizing * {
  pointer-events: none;
}

/* Accordion Container */
.accordionContainer {
  display: flex;
  flex-direction: column;
  gap: 4px;
  padding: 8px;
}

/* Priority-based styling for property groups */
.priority-high {
  order: 1;
  border-left: 4px solid var(--primary);
  background: linear-gradient(90deg, rgba(99, 102, 241, 0.05) 0%, transparent 100%);
}

.priority-medium {
  order: 2;
  border-left: 2px solid rgba(99, 102, 241, 0.3);
}

.priority-low {
  order: 3;
  border-left: 1px solid rgba(99, 102, 241, 0.1);
  opacity: 0.85;
}

/* Resize Handle */
.resizeHandle {
  position: absolute;
  left: 0;
  top: 0;
  width: 4px;
  height: 100%;
  cursor: col-resize;
  background: transparent;
  transition: background-color 0.2s ease;
  z-index: 1001;
}

.resizeHandle:hover,
.resizeHandle:active {
  background: var(--primary);
}

/* Panel Content */
.panelContent {
  display: flex;
  flex-direction: column;
  flex: 1;
  overflow: hidden;
}

/* Header Styles */
.header {
  display: flex;
  flex-direction: column;
  border-bottom: 1px solid var(--border);
  background: var(--surface);
  flex-shrink: 0;
}

.header.compact {
  min-height: 48px;
}

.headerContent {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 12px 16px;
  min-height: 56px;
}

.header.compact .headerContent {
  padding: 8px 12px;
  min-height: 48px;
}

.headerInfo {
  display: flex;
  align-items: center;
  gap: 12px;
  flex: 1;
  min-width: 0;
}

.headerIcon {
  width: 20px;
  height: 20px;
  color: var(--text-secondary);
  flex-shrink: 0;
}

.headerText {
  min-width: 0;
  flex: 1;
}

.headerTitle {
  font-size: 14px;
  font-weight: 600;
  color: var(--text-primary);
  margin: 0;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.headerSubtitle {
  font-size: 12px;
  color: var(--text-secondary);
  margin-top: 2px;
  display: block;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.headerActions {
  display: flex;
  align-items: center;
  gap: 4px;
  flex-shrink: 0;
}

.headerButton {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 32px;
  height: 32px;
  border: none;
  background: transparent;
  border-radius: 6px;
  color: var(--text-secondary);
  cursor: pointer;
  transition: all 0.2s ease;
}

.headerButton:hover {
  background: var(--hover);
  color: var(--text-primary);
}

.headerButton.active {
  background: var(--primary-light);
  color: var(--primary);
}

.headerButton svg {
  width: 16px;
  height: 16px;
}

/* Search Container */
.searchContainer {
  padding: 8px 16px 12px;
  border-bottom: 1px solid var(--border-light);
}

.headerSearch {
  width: 100%;
}

/* Search Input Styles */
.searchInput {
  position: relative;
  display: flex;
  align-items: center;
  background: var(--surface);
  border: 1px solid var(--border);
  border-radius: 6px;
  padding: 0;
}

.searchIcon {
  display: flex;
  align-items: center;
  padding: 8px 12px;
  color: var(--text-secondary);
  flex-shrink: 0;
}

.searchIcon svg {
  width: 16px;
  height: 16px;
}

.searchField {
  flex: 1;
  border: none;
  background: transparent;
  padding: 8px 0;
  font-size: 14px;
  color: var(--text-primary);
  outline: none;
}

.searchField::placeholder {
  color: var(--text-secondary);
}

.clearButton {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 8px;
  border: none;
  background: transparent;
  color: var(--text-secondary);
  cursor: pointer;
  border-radius: 4px;
  transition: all 0.2s ease;
}

.clearButton:hover {
  background: var(--hover);
  color: var(--text-primary);
}

.clearButton svg {
  width: 14px;
  height: 14px;
}

/* Tab Navigation */
.tabNavigation {
  display: flex;
  border-bottom: 1px solid var(--border);
  background: var(--surface);
  flex-shrink: 0;
}

.tabNavigation.compact {
  min-height: 40px;
}

.tabContainer {
  display: flex;
  width: 100%;
}

.tab {
  display: flex;
  align-items: center;
  gap: 8px;
  padding: 12px 16px;
  border: none;
  background: transparent;
  color: var(--text-secondary);
  cursor: pointer;
  transition: all 0.2s ease;
  position: relative;
  flex: 1;
  justify-content: center;
  min-width: 0;
}

.tabNavigation.compact .tab {
  padding: 8px 12px;
  gap: 6px;
}

.tab:hover {
  background: var(--hover);
  color: var(--text-primary);
}

.tab.active {
  color: var(--primary);
  background: var(--primary-light);
}

.tabIcon {
  display: flex;
  align-items: center;
  flex-shrink: 0;
}

.tabIcon svg {
  width: 16px;
  height: 16px;
}

.tabLabel {
  font-size: 13px;
  font-weight: 500;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.activeIndicator {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  height: 2px;
  background: var(--primary);
}

/* Mobile Tab Navigation */
.mobileTabContainer {
  display: flex;
  overflow-x: auto;
  scrollbar-width: none;
  -ms-overflow-style: none;
}

.mobileTabContainer::-webkit-scrollbar {
  display: none;
}

.mobileTab {
  flex-shrink: 0;
  min-width: 80px;
}

/* Property Form */
.propertyForm {
  display: flex;
  flex-direction: column;
  flex: 1;
  overflow: hidden;
}

.propertyForm.compact {
  --form-spacing: 12px;
}

.formContent {
  flex: 1;
  overflow-y: auto;
  padding: 16px;
}

.propertyForm.compact .formContent {
  padding: 12px;
}

/* Form Controls */
.formGroup {
  margin-bottom: 16px;
}

.propertyForm.compact .formGroup {
  margin-bottom: 12px;
}

.formLabel {
  display: block;
  font-size: 13px;
  font-weight: 500;
  color: var(--text-primary);
  margin-bottom: 6px;
}

.formInput {
  width: 100%;
  padding: 8px 12px;
  border: 1px solid var(--border);
  border-radius: 6px;
  background: var(--surface);
  color: var(--text-primary);
  font-size: 14px;
  transition: all 0.2s ease;
}

.formInput:focus {
  outline: none;
  border-color: var(--primary);
  box-shadow: 0 0 0 3px var(--primary-light);
}

.formInput:disabled {
  background: var(--disabled);
  color: var(--text-disabled);
  cursor: not-allowed;
}

.formError {
  font-size: 12px;
  color: var(--error);
  margin-top: 4px;
}

/* Additional Form Control Styles */
.inputContainer {
  position: relative;
}

.formInput.error {
  border-color: var(--error);
  box-shadow: 0 0 0 3px var(--error-light);
}

.formInput.focused {
  border-color: var(--primary);
  box-shadow: 0 0 0 3px var(--primary-light);
}

.formInput.readonly {
  background: var(--disabled);
  color: var(--text-secondary);
  cursor: not-allowed;
}

.charCount {
  position: absolute;
  bottom: -20px;
  right: 0;
  font-size: 11px;
  color: var(--text-secondary);
}

.charCount .warning {
  color: var(--warning);
}

.required {
  color: var(--error);
  margin-left: 2px;
}

.fieldHint {
  display: block;
  font-size: 11px;
  font-weight: 400;
  color: var(--text-secondary);
  margin-top: 2px;
}

/* Input Group Styles */
.inputGroup {
  display: flex;
  gap: 8px;
}

.inputGroup .formInput {
  flex: 1;
}

/* Property Group Styles */
.propertyGroup {
  background: var(--background);
  border: 1px solid var(--border);
  border-radius: 8px;
  margin-bottom: 8px;
  transition: all 0.2s ease;
  overflow: hidden;
}

.propertyGroup:hover {
  border-color: rgba(99, 102, 241, 0.3);
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
}

.propertyGroupHeader {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 12px 16px;
  background: rgba(99, 102, 241, 0.02);
  border-bottom: 1px solid var(--border);
  font-weight: 500;
  font-size: 14px;
}

.propertyGroupContent {
  padding: 16px;
  display: flex;
  flex-direction: column;
  gap: 12px;
}

.propertyGroup.compact .propertyGroupHeader {
  padding: 8px 12px;
  font-size: 13px;
}

.propertyGroup.compact .propertyGroupContent {
  padding: 12px;
  gap: 8px;
}

.propertyGroupTitleContainer {
  display: flex;
  align-items: center;
  gap: 8px;
}

.propertyGroupIcon {
  display: flex;
  align-items: center;
  color: var(--text-secondary);
}

.propertyGroupIcon svg {
  width: 16px;
  height: 16px;
}

.propertyGroupToggle {
  display: flex;
  align-items: center;
  color: var(--text-secondary);
  transition: transform 0.2s ease;
}

.propertyGroupToggle.expanded {
  transform: rotate(90deg);
}

.propertyGroupHeader.clickable {
  cursor: pointer;
  user-select: none;
  transition: background-color 0.2s ease;
}

.propertyGroupHeader.clickable:hover {
  background: rgba(99, 102, 241, 0.05);
}

.propertyGroupToggle svg {
  width: 16px;
  height: 16px;
}

/* Tab Content Styles */
.tabContent {
  height: 100%;
  overflow-y: auto;
}

.overviewTab {
  display: flex;
  flex-direction: column;
}

/* Item Section Styles */
.itemSection {
  margin-bottom: 24px;
}

.multiSelection {
  display: flex;
  flex-direction: column;
}

.selectionSummary {
  display: flex;
  flex-direction: column;
  gap: 8px;
  padding: 12px;
  background: var(--surface-light);
  border-radius: 6px;
  margin-bottom: 16px;
}

.summaryItem {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.summaryLabel {
  font-size: 13px;
  color: var(--text-secondary);
}

.summaryValue {
  font-size: 13px;
  font-weight: 600;
  color: var(--text-primary);
}

/* Item List Styles */
.itemsList {
  display: flex;
  flex-direction: column;
  gap: 8px;
}

.itemSummary {
  display: flex;
  align-items: center;
  gap: 12px;
  padding: 8px 12px;
  background: var(--surface-light);
  border-radius: 6px;
  border: 1px solid var(--border-light);
}

.itemIcon {
  display: flex;
  align-items: center;
  color: var(--text-secondary);
  flex-shrink: 0;
}

.itemIcon svg {
  width: 18px;
  height: 18px;
}

.itemInfo {
  display: flex;
  flex-direction: column;
  min-width: 0;
  flex: 1;
}

.itemName {
  font-size: 13px;
  font-weight: 500;
  color: var(--text-primary);
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.itemType {
  font-size: 11px;
  color: var(--text-secondary);
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

/* Color Picker Styles */
.colorPicker {
  position: relative;
}

.colorPickerContainer {
  display: flex;
  align-items: center;
  gap: 8px;
}

.colorPreview {
  width: 32px;
  height: 32px;
  border: 2px solid var(--border);
  border-radius: 6px;
  cursor: pointer;
  transition: border-color 0.2s ease;
}

.colorPreview:hover {
  border-color: var(--primary);
}

.colorInput {
  flex: 1;
  padding: 8px 12px;
  border: 1px solid var(--border);
  border-radius: 6px;
  background: var(--surface);
  color: var(--text-primary);
  font-size: 14px;
  font-family: monospace;
}

.nativeColorPicker {
  width: 32px;
  height: 32px;
  border: none;
  border-radius: 6px;
  cursor: pointer;
  background: transparent;
}

.colorPresets {
  position: absolute;
  top: 100%;
  left: 0;
  right: 0;
  z-index: 1000;
  background: var(--surface);
  border: 1px solid var(--border);
  border-radius: 8px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  margin-top: 4px;
  padding: 12px;
}

.presetGrid {
  display: grid;
  grid-template-columns: repeat(11, 1fr);
  gap: 6px;
  margin-bottom: 12px;
}

.colorPreset {
  width: 24px;
  height: 24px;
  border: 2px solid transparent;
  border-radius: 4px;
  cursor: pointer;
  transition: all 0.2s ease;
}

.colorPreset:hover {
  border-color: var(--primary);
  transform: scale(1.1);
}

.colorPreset.selected {
  border-color: var(--primary);
  transform: scale(1.1);
}

.colorPickerActions {
  display: flex;
  justify-content: flex-end;
}

/* Backdrop */
.backdrop {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.5);
  z-index: 999;
  animation: fadeIn 0.3s ease;
}

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

/* Mobile specific styles */
.dragHandle {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 12px;
  cursor: grab;
}

.dragHandle:active {
  cursor: grabbing;
}

.dragIndicator {
  width: 40px;
  height: 4px;
  background: var(--border);
  border-radius: 2px;
}

/* Range Input Styles */
.rangeInput {
  width: 100%;
  margin: 8px 0;
}

.rangeValue {
  font-size: 12px;
  color: var(--text-secondary);
  margin-left: 8px;
}

/* Additional Tab Styles */
.propertiesTab,
.styleTab,
.advancedTab,
.diagramTab {
  display: flex;
  flex-direction: column;
}

/* Responsive Styles */
@media (max-width: 1023px) {
  .propertyPanel.desktop {
    display: none;
  }
}

@media (max-width: 767px) {
  .propertyPanel.tablet {
    display: none;
  }
}

/* Device-specific styles */
.propertyPanel.mobile {
  position: fixed;
  bottom: 0;
  top: auto;
  left: 0;
  right: 0;
  width: 100vw;
  height: auto;
  max-height: 70vh;
  border-left: none;
  border-top: 1px solid var(--border);
  border-radius: 16px 16px 0 0;
  transform: translateY(100%);
  transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.propertyPanel.mobile.open {
  transform: translateY(0);
}

.propertyPanel.tablet {
  position: fixed;
  top: 50%;
  left: 50%;
  right: auto;
  width: 90vw;
  max-width: 480px;
  height: 80vh;
  border: 1px solid var(--border);
  border-radius: 12px;
  transform: translate(-50%, -50%) scale(0.9);
  opacity: 0;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.propertyPanel.tablet.open {
  transform: translate(-50%, -50%) scale(1);
  opacity: 1;
}

/* Scrollbar Styles */
.formContent::-webkit-scrollbar {
  width: 6px;
}

.formContent::-webkit-scrollbar-track {
  background: transparent;
}

.formContent::-webkit-scrollbar-thumb {
  background: var(--border);
  border-radius: 3px;
}

.formContent::-webkit-scrollbar-thumb:hover {
  background: var(--border-dark);
}

/* Utility Classes */
.truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

/* Loading States */
.loading {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 32px;
  color: var(--text-secondary);
}

/* Empty States */
.emptyState {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 32px 16px;
  text-align: center;
  color: var(--text-secondary);
}

.emptyStateIcon {
  width: 48px;
  height: 48px;
  margin-bottom: 16px;
  opacity: 0.5;
}

.emptyStateTitle {
  font-size: 16px;
  font-weight: 600;
  margin-bottom: 8px;
  color: var(--text-primary);
}

.emptyStateDescription {
  font-size: 14px;
  line-height: 1.5;
  max-width: 280px;
}

/* Auto-sync Status Indicator */
.syncStatus {
  padding: 8px 16px;
  border-top: 1px solid var(--border);
  background: var(--background-secondary);
  font-size: 12px;
  color: var(--text-secondary);
}

.syncIndicator {
  display: flex;
  align-items: center;
  gap: 8px;
  margin-bottom: 4px;
}

.syncSpinner {
  width: 12px;
  height: 12px;
  border: 2px solid var(--border);
  border-top: 2px solid var(--primary);
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.syncCheck {
  width: 12px;
  height: 12px;
  background: var(--success, #10b981);
  color: white;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 8px;
  font-weight: bold;
}

.syncPending {
  width: 6px;
  height: 6px;
  background: var(--warning, #f59e0b);
  border-radius: 50%;
  animation: pulse 2s ease-in-out infinite;
}

@keyframes pulse {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.5; }
}

.syncText {
  font-weight: 500;
}

.lastSync {
  font-size: 11px;
  color: var(--text-tertiary);
  opacity: 0.8;
}

/* Compact mode adjustments */
.propertyPanel.compact .syncStatus {
  padding: 6px 12px;
  font-size: 11px;
}

.propertyPanel.compact .syncIndicator {
  gap: 6px;
}

/* Mobile adjustments */
.propertyPanel.mobile .syncStatus {
  position: sticky;
  bottom: 0;
  z-index: 10;
  border-top: 2px solid var(--border);
}
